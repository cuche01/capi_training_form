/* Application 'Profoma' logic file generated by CSPro */
PROC GLOBAL
numeric AgeInYear1;

PROC RE_DAY

// Preproc
// $ = sysdate("DD");
PROC RE_MONTH
// Preproc
// $ = sysdate("MM");
PROC RE_YEAR
// Preproc
// $ = sysdate("YYYY");
PROC PROFOMA_FF

PROC LGA

Preproc

If STATE = 1 Then
  setvalueset(LGA, SOKOTO);
elseif STATE = 2 Then
  setvalueset(LGA, ZAMFARA);
elseif STATE = 3 Then
  setvalueset(LGA, KATSINA);


Endif;
PROC RE_DATE

Preproc
$ = sysdate("YYYYMMDD");

PROC DOB_Y

if DOB_Y <> 9999 then
		// Year of birth is known, calculate age
		numeric dateOfBirthForAgeCalc1;
		if DOB_D = 99 and DOB_M <> 99 then
			// Day is unknown, month is known - assume middle of month
			dateOfBirthForAgeCalc1 = DOB_D + DOB_M * 100 + DOB_Y * 10000;
		elseif DOB_D <> 99 and DOB_M = 99 then
			// Day is known, month unknown - assume July
			dateOfBirthForAgeCalc1 = DOB_D + 7 * 100 + DOB_Y * 10000;
		elseif DOB_D = 99 and DOB_M = 99 then
			// Day and month both unknown - assume July first
			dateOfBirthForAgeCalc1 = 0701 + DOB_Y * 10000;
		else
			// All known - use actual date
			dateOfBirthForAgeCalc1 = DOB_D + 
							(DOB_M * 100) + 
							(DOB_Y * 10000);
		endif;
		

		AgeInYear1 = datediff(dateOfBirthForAgeCalc1, RE_DATE, "y");
		
	endif;

errmsg("Age entered is %d", AgeInYear1);
PROC AGE


preproc
$ = AgeInYear1;

noinput;

// numeric entered_dob = tonumber(concat(edit("9999", DOB_Y), edit("99", DOB_M), edit("99", DOB_D)));
// errmsg(entered_dob);
// // numeric today_date = sysdate("YYYYMMDD");
// numeric today_date = sysdate("YYYYMMDD");


// numeric age_calculated = datediff(entered_dob, today_date, "y");


// $ = age_calculated;
PROC PLACE_RES
postproc
// errmsg(concat("A", PLACE_RES, "A"));
If length(strip($)) < 1 Then
  errmsg("This can't be blank");
  Reenter
Endif;
PROC ETHNIC


if $ in 0:4 Then
  skip to RELIGION;
Endif;



// if $ = 0 or $ = 1 or $ = 2 or $ = 3 or $ = 4 Then
  // skip to RELIGION;
// Endif;




// if $ <> 9 Then
  // skip to RELIGION;
// Endif;

PROC CON_ANC

if length(strip($)) = 0 then
	errmsg("You must select at least one option");
	reenter;
endif;

if ischecked("A", CON_ANC) then BP = 1; else BP = 2; endif;
if ischecked("B", CON_ANC) then FERSOLATE = 1; else FERSOLATE = 2; endif;
if ischecked("C", CON_ANC) then TT = 1; else TT = 2; endif;
if ischecked("D", CON_ANC) then EXP_OF_PREG = 1; else EXP_OF_PREG = 2; endif;
if ischecked("E", CON_ANC) then URINALYSIS = 1; else URINALYSIS = 2; endif;
if ischecked("F", CON_ANC) then FBC = 1; else FBC = 2; endif;
if ischecked("G", CON_ANC) then WEIGHT_1 = 1; else WEIGHT_1 = 2; endif;
PROC SOURCE_OF_DRINKING_WATER

if $ in 1:4 then
	skip to TOILET_FACILITY;
endif;
PROC TOILET_FACILITY

if $ in 1:4 then
	skip to TYPE_OF_RESIDENCE;
endif;
PROC AMENITIES_POSSESSED


// if length(strip($)) = 0 then
	// errmsg("You must select at least one option");
	// reenter;
// endif;

// if ischecked("A", AMENITIES_POSSESSED) then BP = 1; else BP = 2; endif;
// if ischecked("B", AMENITIES_POSSESSED) then FERSOLATE = 1; else FERSOLATE = 2; endif;
// if ischecked("C", AMENITIES_POSSESSED) then TT = 1; else TT = 2; endif;
// if ischecked("D", AMENITIES_POSSESSED) then EXP_OF_PREG = 1; else EXP_OF_PREG = 2; endif;
// if ischecked("E", AMENITIES_POSSESSED) then URINALYSIS = 1; else URINALYSIS = 2; endif;
// if ischecked("F", AMENITIES_POSSESSED) then FBC = 1; else FBC = 2; endif;
// if ischecked("G", AMENITIES_POSSESSED) then WEIGHT_1 = 1; else WEIGHT_1 = 2; endif;
